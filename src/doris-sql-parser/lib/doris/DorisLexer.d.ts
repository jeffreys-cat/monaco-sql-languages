import * as antlr from 'antlr4ng';
export declare class DorisLexer extends antlr.Lexer {
	static readonly SEMICOLON = 1;
	static readonly LEFT_PAREN = 2;
	static readonly RIGHT_PAREN = 3;
	static readonly COMMA = 4;
	static readonly DOT = 5;
	static readonly LEFT_BRACKET = 6;
	static readonly RIGHT_BRACKET = 7;
	static readonly LEFT_BRACE = 8;
	static readonly RIGHT_BRACE = 9;
	static readonly ACCOUNT_LOCK = 10;
	static readonly ACCOUNT_UNLOCK = 11;
	static readonly ADD = 12;
	static readonly ADDDATE = 13;
	static readonly ADMIN = 14;
	static readonly AFTER = 15;
	static readonly AGG_STATE = 16;
	static readonly AGGREGATE = 17;
	static readonly ALIAS = 18;
	static readonly ALL = 19;
	static readonly ALTER = 20;
	static readonly ANALYZE = 21;
	static readonly ANALYZED = 22;
	static readonly AND = 23;
	static readonly ANTI = 24;
	static readonly APPEND = 25;
	static readonly ARRAY = 26;
	static readonly ARRAY_RANGE = 27;
	static readonly AS = 28;
	static readonly ASC = 29;
	static readonly AT = 30;
	static readonly AUTHORS = 31;
	static readonly AUTO = 32;
	static readonly AUTO_INCREMENT = 33;
	static readonly BACKEND = 34;
	static readonly BACKENDS = 35;
	static readonly BACKUP = 36;
	static readonly BEGIN = 37;
	static readonly BELONG = 38;
	static readonly BETWEEN = 39;
	static readonly BIGINT = 40;
	static readonly BIN = 41;
	static readonly BINARY = 42;
	static readonly BINLOG = 43;
	static readonly BITAND = 44;
	static readonly BITMAP = 45;
	static readonly BITMAP_UNION = 46;
	static readonly BITOR = 47;
	static readonly BITXOR = 48;
	static readonly BLOB = 49;
	static readonly BOOLEAN = 50;
	static readonly BRIEF = 51;
	static readonly BROKER = 52;
	static readonly BUCKETS = 53;
	static readonly BUILD = 54;
	static readonly BUILTIN = 55;
	static readonly BULK = 56;
	static readonly BY = 57;
	static readonly CACHE = 58;
	static readonly CACHED = 59;
	static readonly CALL = 60;
	static readonly CANCEL = 61;
	static readonly CASE = 62;
	static readonly CAST = 63;
	static readonly CATALOG = 64;
	static readonly CATALOGS = 65;
	static readonly CHAIN = 66;
	static readonly CHAR = 67;
	static readonly CHARSET = 68;
	static readonly CHECK = 69;
	static readonly CLEAN = 70;
	static readonly CLUSTER = 71;
	static readonly CLUSTERS = 72;
	static readonly COLLATE = 73;
	static readonly COLLATION = 74;
	static readonly COLLECT = 75;
	static readonly COLOCATE = 76;
	static readonly COLUMN = 77;
	static readonly COLUMNS = 78;
	static readonly COMMENT = 79;
	static readonly COMMIT = 80;
	static readonly COMMITTED = 81;
	static readonly COMPACT = 82;
	static readonly COMPLETE = 83;
	static readonly COMPRESS_TYPE = 84;
	static readonly CONFIG = 85;
	static readonly CONNECTION = 86;
	static readonly CONNECTION_ID = 87;
	static readonly CONSISTENT = 88;
	static readonly CONSTRAINT = 89;
	static readonly CONSTRAINTS = 90;
	static readonly CONVERT = 91;
	static readonly CONVERT_LSC = 92;
	static readonly COPY = 93;
	static readonly COUNT = 94;
	static readonly CREATE = 95;
	static readonly CREATION = 96;
	static readonly CRON = 97;
	static readonly CROSS = 98;
	static readonly CUBE = 99;
	static readonly CURRENT = 100;
	static readonly CURRENT_CATALOG = 101;
	static readonly CURRENT_DATE = 102;
	static readonly CURRENT_TIME = 103;
	static readonly CURRENT_TIMESTAMP = 104;
	static readonly CURRENT_USER = 105;
	static readonly DATA = 106;
	static readonly DATABASE = 107;
	static readonly DATABASES = 108;
	static readonly DATE = 109;
	static readonly DATE_ADD = 110;
	static readonly DATE_CEIL = 111;
	static readonly DATE_DIFF = 112;
	static readonly DATE_FLOOR = 113;
	static readonly DATE_SUB = 114;
	static readonly DATEADD = 115;
	static readonly DATEDIFF = 116;
	static readonly DATETIME = 117;
	static readonly DATETIMEV2 = 118;
	static readonly DATEV2 = 119;
	static readonly DATETIMEV1 = 120;
	static readonly DATEV1 = 121;
	static readonly DAY = 122;
	static readonly DAYS_ADD = 123;
	static readonly DAYS_SUB = 124;
	static readonly DECIMAL = 125;
	static readonly DECIMALV2 = 126;
	static readonly DECIMALV3 = 127;
	static readonly DECOMMISSION = 128;
	static readonly DEFAULT = 129;
	static readonly DEFERRED = 130;
	static readonly DELETE = 131;
	static readonly DEMAND = 132;
	static readonly DESC = 133;
	static readonly DESCRIBE = 134;
	static readonly DIAGNOSE = 135;
	static readonly DISK = 136;
	static readonly DISTINCT = 137;
	static readonly DISTINCTPC = 138;
	static readonly DISTINCTPCSA = 139;
	static readonly DISTRIBUTED = 140;
	static readonly DISTRIBUTION = 141;
	static readonly DIV = 142;
	static readonly DO = 143;
	static readonly DORIS_INTERNAL_TABLE_ID = 144;
	static readonly DOUBLE = 145;
	static readonly DROP = 146;
	static readonly DROPP = 147;
	static readonly DUAL = 148;
	static readonly DUPLICATE = 149;
	static readonly DYNAMIC = 150;
	static readonly ELSE = 151;
	static readonly ENABLE = 152;
	static readonly ENCRYPTKEY = 153;
	static readonly ENCRYPTKEYS = 154;
	static readonly END = 155;
	static readonly ENDS = 156;
	static readonly ENGINE = 157;
	static readonly ENGINES = 158;
	static readonly ENTER = 159;
	static readonly ERRORS = 160;
	static readonly EVENTS = 161;
	static readonly EVERY = 162;
	static readonly EXCEPT = 163;
	static readonly EXCLUDE = 164;
	static readonly EXECUTE = 165;
	static readonly EXISTS = 166;
	static readonly EXPIRED = 167;
	static readonly EXPLAIN = 168;
	static readonly EXPORT = 169;
	static readonly EXTENDED = 170;
	static readonly EXTERNAL = 171;
	static readonly EXTRACT = 172;
	static readonly FAILED_LOGIN_ATTEMPTS = 173;
	static readonly FALSE = 174;
	static readonly FAST = 175;
	static readonly FEATURE = 176;
	static readonly FIELDS = 177;
	static readonly FILE = 178;
	static readonly FILTER = 179;
	static readonly FIRST = 180;
	static readonly FLOAT = 181;
	static readonly FOLLOWER = 182;
	static readonly FOLLOWING = 183;
	static readonly FOR = 184;
	static readonly FOREIGN = 185;
	static readonly FORCE = 186;
	static readonly FORMAT = 187;
	static readonly FREE = 188;
	static readonly FROM = 189;
	static readonly FRONTEND = 190;
	static readonly FRONTENDS = 191;
	static readonly FULL = 192;
	static readonly FUNCTION = 193;
	static readonly FUNCTIONS = 194;
	static readonly GENERIC = 195;
	static readonly GLOBAL = 196;
	static readonly GRANT = 197;
	static readonly GRANTS = 198;
	static readonly GRAPH = 199;
	static readonly GROUP = 200;
	static readonly GROUPING = 201;
	static readonly GROUPS = 202;
	static readonly HASH = 203;
	static readonly HAVING = 204;
	static readonly HDFS = 205;
	static readonly HELP = 206;
	static readonly HISTOGRAM = 207;
	static readonly HLL = 208;
	static readonly HLL_UNION = 209;
	static readonly HOSTNAME = 210;
	static readonly HOTSPOT = 211;
	static readonly HOUR = 212;
	static readonly HUB = 213;
	static readonly IDENTIFIED = 214;
	static readonly IF = 215;
	static readonly IGNORE = 216;
	static readonly IMMEDIATE = 217;
	static readonly IN = 218;
	static readonly INCREMENTAL = 219;
	static readonly INDEX = 220;
	static readonly INDEXES = 221;
	static readonly INFILE = 222;
	static readonly INNER = 223;
	static readonly INSERT = 224;
	static readonly INSTALL = 225;
	static readonly INT = 226;
	static readonly INTEGER = 227;
	static readonly INTERMEDIATE = 228;
	static readonly INTERSECT = 229;
	static readonly INTERVAL = 230;
	static readonly INTO = 231;
	static readonly INVERTED = 232;
	static readonly IPV4 = 233;
	static readonly IPV6 = 234;
	static readonly IS = 235;
	static readonly IS_NOT_NULL_PRED = 236;
	static readonly IS_NULL_PRED = 237;
	static readonly ISNULL = 238;
	static readonly ISOLATION = 239;
	static readonly JOB = 240;
	static readonly JOBS = 241;
	static readonly JOIN = 242;
	static readonly JSON = 243;
	static readonly JSONB = 244;
	static readonly KEY = 245;
	static readonly KEYS = 246;
	static readonly KILL = 247;
	static readonly LABEL = 248;
	static readonly LARGEINT = 249;
	static readonly LAST = 250;
	static readonly LATERAL = 251;
	static readonly LDAP = 252;
	static readonly LDAP_ADMIN_PASSWORD = 253;
	static readonly LEFT = 254;
	static readonly LESS = 255;
	static readonly LEVEL = 256;
	static readonly LIKE = 257;
	static readonly LIMIT = 258;
	static readonly LINES = 259;
	static readonly LINK = 260;
	static readonly LIST = 261;
	static readonly LOAD = 262;
	static readonly LOCAL = 263;
	static readonly LOCALTIME = 264;
	static readonly LOCALTIMESTAMP = 265;
	static readonly LOCATION = 266;
	static readonly LOCK = 267;
	static readonly LOGICAL = 268;
	static readonly LOW_PRIORITY = 269;
	static readonly MANUAL = 270;
	static readonly MAP = 271;
	static readonly MATCH = 272;
	static readonly MATCH_ALL = 273;
	static readonly MATCH_ANY = 274;
	static readonly MATCH_PHRASE = 275;
	static readonly MATCH_PHRASE_EDGE = 276;
	static readonly MATCH_PHRASE_PREFIX = 277;
	static readonly MATCH_REGEXP = 278;
	static readonly MATERIALIZED = 279;
	static readonly MAX = 280;
	static readonly MAXVALUE = 281;
	static readonly MEMO = 282;
	static readonly MERGE = 283;
	static readonly MIGRATE = 284;
	static readonly MIGRATIONS = 285;
	static readonly MIN = 286;
	static readonly MINUS = 287;
	static readonly MINUTE = 288;
	static readonly MODIFY = 289;
	static readonly MONTH = 290;
	static readonly MTMV = 291;
	static readonly NAME = 292;
	static readonly NAMES = 293;
	static readonly NATURAL = 294;
	static readonly NEGATIVE = 295;
	static readonly NEVER = 296;
	static readonly NEXT = 297;
	static readonly NGRAM_BF = 298;
	static readonly NO = 299;
	static readonly NON_NULLABLE = 300;
	static readonly NOT = 301;
	static readonly NULL = 302;
	static readonly NULLS = 303;
	static readonly OBSERVER = 304;
	static readonly OF = 305;
	static readonly OFFSET = 306;
	static readonly ON = 307;
	static readonly ONLY = 308;
	static readonly OPEN = 309;
	static readonly OPTIMIZED = 310;
	static readonly OR = 311;
	static readonly ORDER = 312;
	static readonly OUTER = 313;
	static readonly OUTFILE = 314;
	static readonly OVER = 315;
	static readonly OVERWRITE = 316;
	static readonly PARAMETER = 317;
	static readonly PARSED = 318;
	static readonly PARTITION = 319;
	static readonly PARTITIONS = 320;
	static readonly PASSWORD = 321;
	static readonly PASSWORD_EXPIRE = 322;
	static readonly PASSWORD_HISTORY = 323;
	static readonly PASSWORD_LOCK_TIME = 324;
	static readonly PASSWORD_REUSE = 325;
	static readonly PATH = 326;
	static readonly PAUSE = 327;
	static readonly PERCENT = 328;
	static readonly PERIOD = 329;
	static readonly PERMISSIVE = 330;
	static readonly PHYSICAL = 331;
	static readonly PLACEHOLDER = 332;
	static readonly PLAN = 333;
	static readonly PRIVILEGES = 334;
	static readonly PROCESS = 335;
	static readonly PLUGIN = 336;
	static readonly PLUGINS = 337;
	static readonly POLICY = 338;
	static readonly PRECEDING = 339;
	static readonly PREPARE = 340;
	static readonly PRIMARY = 341;
	static readonly PROC = 342;
	static readonly PROCEDURE = 343;
	static readonly PROCESSLIST = 344;
	static readonly PROFILE = 345;
	static readonly PROPERTIES = 346;
	static readonly PROPERTY = 347;
	static readonly QUANTILE_STATE = 348;
	static readonly QUANTILE_UNION = 349;
	static readonly QUERY = 350;
	static readonly QUOTA = 351;
	static readonly RANDOM = 352;
	static readonly RANGE = 353;
	static readonly READ = 354;
	static readonly REAL = 355;
	static readonly REBALANCE = 356;
	static readonly RECENT = 357;
	static readonly RECOVER = 358;
	static readonly RECYCLE = 359;
	static readonly REFRESH = 360;
	static readonly REFERENCES = 361;
	static readonly REGEXP = 362;
	static readonly RELEASE = 363;
	static readonly RENAME = 364;
	static readonly REPAIR = 365;
	static readonly REPEATABLE = 366;
	static readonly REPLACE = 367;
	static readonly REPLACE_IF_NOT_NULL = 368;
	static readonly REPLICA = 369;
	static readonly REPOSITORIES = 370;
	static readonly REPOSITORY = 371;
	static readonly RESOURCE = 372;
	static readonly RESOURCES = 373;
	static readonly RESTORE = 374;
	static readonly RESTRICTIVE = 375;
	static readonly RESUME = 376;
	static readonly RETURNS = 377;
	static readonly REVOKE = 378;
	static readonly REWRITTEN = 379;
	static readonly RIGHT = 380;
	static readonly RLIKE = 381;
	static readonly ROLE = 382;
	static readonly ROLES = 383;
	static readonly ROLLBACK = 384;
	static readonly ROLLUP = 385;
	static readonly ROUTINE = 386;
	static readonly ROW = 387;
	static readonly ROWS = 388;
	static readonly S3 = 389;
	static readonly SAMPLE = 390;
	static readonly SCHEDULE = 391;
	static readonly SCHEDULER = 392;
	static readonly SCHEMA = 393;
	static readonly SCHEMAS = 394;
	static readonly SECOND = 395;
	static readonly SELECT = 396;
	static readonly SEMI = 397;
	static readonly SEQUENCE = 398;
	static readonly SERIALIZABLE = 399;
	static readonly SESSION = 400;
	static readonly SET = 401;
	static readonly SETS = 402;
	static readonly SHAPE = 403;
	static readonly SHOW = 404;
	static readonly SIGNED = 405;
	static readonly SKEW = 406;
	static readonly SMALLINT = 407;
	static readonly SNAPSHOT = 408;
	static readonly SONAME = 409;
	static readonly SPLIT = 410;
	static readonly SQL = 411;
	static readonly SQL_BLOCK_RULE = 412;
	static readonly STAGES = 413;
	static readonly START = 414;
	static readonly STARTS = 415;
	static readonly STATS = 416;
	static readonly STATUS = 417;
	static readonly STOP = 418;
	static readonly STORAGE = 419;
	static readonly STREAM = 420;
	static readonly STREAMING = 421;
	static readonly STRING = 422;
	static readonly STRUCT = 423;
	static readonly SUBDATE = 424;
	static readonly SUM = 425;
	static readonly SUPERUSER = 426;
	static readonly SWITCH = 427;
	static readonly SYNC = 428;
	static readonly SYSTEM = 429;
	static readonly TABLE = 430;
	static readonly TABLES = 431;
	static readonly TABLESAMPLE = 432;
	static readonly TABLET = 433;
	static readonly TABLETS = 434;
	static readonly TASK = 435;
	static readonly TASKS = 436;
	static readonly TEMPORARY = 437;
	static readonly TERMINATED = 438;
	static readonly TEXT = 439;
	static readonly THAN = 440;
	static readonly THEN = 441;
	static readonly TIME = 442;
	static readonly TIMESTAMP = 443;
	static readonly TIMESTAMPADD = 444;
	static readonly TIMESTAMPDIFF = 445;
	static readonly TINYINT = 446;
	static readonly TO = 447;
	static readonly TRANSACTION = 448;
	static readonly TRASH = 449;
	static readonly TREE = 450;
	static readonly TRIGGERS = 451;
	static readonly TRIM = 452;
	static readonly TRUE = 453;
	static readonly TRUNCATE = 454;
	static readonly TYPE = 455;
	static readonly TYPECAST = 456;
	static readonly TYPES = 457;
	static readonly UNBOUNDED = 458;
	static readonly UNCOMMITTED = 459;
	static readonly UNINSTALL = 460;
	static readonly UNION = 461;
	static readonly UNIQUE = 462;
	static readonly UNLOCK = 463;
	static readonly UNSIGNED = 464;
	static readonly UP = 465;
	static readonly UPDATE = 466;
	static readonly USE = 467;
	static readonly USER = 468;
	static readonly USING = 469;
	static readonly VALUE = 470;
	static readonly VALUES = 471;
	static readonly VARCHAR = 472;
	static readonly VARIABLES = 473;
	static readonly VARIANT = 474;
	static readonly VAULT = 475;
	static readonly VERBOSE = 476;
	static readonly VERSION = 477;
	static readonly VIEW = 478;
	static readonly WARM = 479;
	static readonly WARNINGS = 480;
	static readonly WEEK = 481;
	static readonly WHEN = 482;
	static readonly WHERE = 483;
	static readonly WHITELIST = 484;
	static readonly WITH = 485;
	static readonly WORK = 486;
	static readonly WORKLOAD = 487;
	static readonly WRITE = 488;
	static readonly XOR = 489;
	static readonly YEAR = 490;
	static readonly EQ = 491;
	static readonly NSEQ = 492;
	static readonly NEQ = 493;
	static readonly LT = 494;
	static readonly LTE = 495;
	static readonly GT = 496;
	static readonly GTE = 497;
	static readonly PLUS = 498;
	static readonly SUBTRACT = 499;
	static readonly ASTERISK = 500;
	static readonly SLASH = 501;
	static readonly MOD = 502;
	static readonly TILDE = 503;
	static readonly AMPERSAND = 504;
	static readonly LOGICALAND = 505;
	static readonly LOGICALNOT = 506;
	static readonly PIPE = 507;
	static readonly DOUBLEPIPES = 508;
	static readonly HAT = 509;
	static readonly COLON = 510;
	static readonly ARROW = 511;
	static readonly HINT_START = 512;
	static readonly HINT_END = 513;
	static readonly ATSIGN = 514;
	static readonly DOUBLEATSIGN = 515;
	static readonly STRING_LITERAL = 516;
	static readonly LEADING_STRING = 517;
	static readonly BIGINT_LITERAL = 518;
	static readonly SMALLINT_LITERAL = 519;
	static readonly TINYINT_LITERAL = 520;
	static readonly INTEGER_VALUE = 521;
	static readonly EXPONENT_VALUE = 522;
	static readonly DECIMAL_VALUE = 523;
	static readonly BIGDECIMAL_LITERAL = 524;
	static readonly IDENTIFIER = 525;
	static readonly BACKQUOTED_IDENTIFIER = 526;
	static readonly SIMPLE_COMMENT = 527;
	static readonly BRACKETED_COMMENT = 528;
	static readonly FROM_DUAL = 529;
	static readonly WS = 530;
	static readonly UNRECOGNIZED = 531;
	static readonly channelNames: string[];
	static readonly literalNames: (string | null)[];
	static readonly symbolicNames: (string | null)[];
	static readonly modeNames: string[];
	static readonly ruleNames: string[];
	/**
	 * When true, parser should throw ParseExcetion for unclosed bracketed comment.
	 */
	has_unclosed_bracketed_comment: boolean;
	/**
	 * Verify whether current token is a valid decimal token (which contains dot).
	 * Returns true if the character that follows the token is not a digit or letter or underscore.
	 *
	 * For example:
	 * For char stream "2.3", "2." is not a valid decimal token, because it is followed by digit '3'.
	 * For char stream "2.3_", "2.3" is not a valid decimal token, because it is followed by '_'.
	 * For char stream "2.3W", "2.3" is not a valid decimal token, because it is followed by 'W'.
	 * For char stream "12.0D 34.E2+0.12 "  12.0D is a valid decimal token because it is followed
	 * by a space. 34.E2 is a valid decimal token because it is followed by symbol '+'
	 * which is not a digit or letter or underscore.
	 */
	isValidDecimal(): boolean;
	/**
	 * This method will be called when we see '/*' and try to match it as a bracketed comment.
	 * If the next character is '+', it should be parsed as hint later, and we cannot match
	 * it as a bracketed comment.
	 *
	 * Returns true if the next character is '+'.
	 */
	isHint(): boolean;
	/**
	 * This method will be called when the character stream ends and try to find out the
	 * unclosed bracketed comment.
	 * If the method be called, it means the end of the entire character stream match,
	 * and we set the flag and fail later.
	 */
	markUnclosedComment(): void;
	constructor(input: antlr.CharStream);
	get grammarFileName(): string;
	get literalNames(): (string | null)[];
	get symbolicNames(): (string | null)[];
	get ruleNames(): string[];
	get serializedATN(): number[];
	get channelNames(): string[];
	get modeNames(): string[];
	action(localContext: antlr.RuleContext | null, ruleIndex: number, actionIndex: number): void;
	private BRACKETED_COMMENT_action;
	sempred(localContext: antlr.RuleContext | null, ruleIndex: number, predIndex: number): boolean;
	private EXPONENT_VALUE_sempred;
	private DECIMAL_VALUE_sempred;
	private BIGDECIMAL_LITERAL_sempred;
	private BRACKETED_COMMENT_sempred;
	static readonly _serializedATN: number[];
	private static __ATN;
	static get _ATN(): antlr.ATN;
	private static readonly vocabulary;
	get vocabulary(): antlr.Vocabulary;
	private static readonly decisionsToDFA;
}
